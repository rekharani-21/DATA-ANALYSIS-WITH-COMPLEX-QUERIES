CREATE DATABASE college;
USE college;


CREATE TABLE students (
  id INT PRIMARY KEY,
  name VARCHAR(100),
  age INT
);

CREATE TABLE courses (
  id INT PRIMARY KEY,
  course_name VARCHAR(100)
);

CREATE TABLE results (
  student_id INT,
  course_id INT,
  marks INT
);

INSERT INTO students VALUES (1, 'Rekha', 22), (2, 'Ravi', 21), (3, 'Anu', 23);
INSERT INTO courses VALUES (1, 'SQL'), (2, 'Python');
INSERT INTO results VALUES (1, 1, 90), (2, 1, 75), (3, 2, 88);

-- subquery 
SELECT student_id
FROM results
WHERE marks > (SELECT AVG(marks) FROM results);


-- common table expression
WITH average_marks AS (
  SELECT AVG(marks) AS avg_marks FROM results
)
SELECT student_id, marks
FROM results
WHERE marks > (SELECT avg_marks FROM average_marks);



-- In this task, I was asked to use a window function to rank students based on their marks. However, my current MySQL version does not support window functions like RANK() OVER (...), which caused error code 1064.

-- To solve this, I used a subquery with COUNT(DISTINCT ...) to simulate the behavior of the RANK() function. Here's the logic:
SELECT r1.student_id, r1.marks,
       ((SELECT COUNT(DISTINCT r2.marks)
         FROM results r2
         WHERE r2.marks > r1.marks) + 1) AS `rank`
FROM results r1
ORDER BY `rank`;


-- Average Marks Per Course (Group By)
SELECT c.course_name, AVG(r.marks) AS avg_marks
FROM results r
JOIN courses c ON r.course_id = c.id
GROUP BY c.course_name;


SELECT c.course_name, AVG(r.marks) AS average_marks
FROM results r
JOIN courses c ON r.course_id = c.id
GROUP BY c.course_name;


SELECT r.student_id, c.course_name, r.marks
FROM results r
JOIN courses c ON r.course_id = c.id
WHERE r.marks = (
  SELECT MAX(r2.marks)
  FROM results r2
  WHERE r2.course_id = r.course_id
);















 
